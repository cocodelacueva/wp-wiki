Optimización de Funciones

Pluggable functions
Estas permiten sustituir determinadas funciones básicas a través de plugins.
WordPress carga las funciones incorporadas sólo si están indefinidas después de que todos los plugins se hayan cargado.

Las funciones condicionales ya no son añadidas al núcleo de WordPress.
Todas estas nuevas funciones no utilizan filtros en su producción, para lograr una funcionalidad similar.

Nota: una función sólo puede ser reasignado de esta manera una vez , por lo que no se puede instalar dos plugins que se conectan a la misma función por diferentes razones.

Lista de Funciones condicionales
wp-includes/pluggable.php
auth_redirect
cache_users
check_admin_referer
check_ajax_referer
get_avatar
get_currentuserinfo
get_user_by_email (obsoleto)
get_user_by
get_userdatabylogin (obsoleto)
get_userdata
is_user_logged_in
wp_authenticate
wp_check_password
wp_clear_auth_cookie
wp_create_nonce
wp_generate_auth_cookie
wp_generate_password
wp_get_current_user
wp_hash_password
wp_hash
wp_logout
wp_mail
wp_new_user_notification
wp_nonce_tick
wp_notify_moderator
wp_notify_postauthor
wp_parse_auth_cookie
wp_password_change_notification
wp_rand
wp_redirect
wp_safe_redirect
wp_salt
wp_sanitize_redirect
wp_set_auth_cookie
wp_set_current_user
wp_set_password
wp_text_diff
wp_validate_auth_cookie
wp_validate_redirect
wp_verify_nonce
Referencia
get_currentuserinfo()

Toma la información si es que existe del usuario que ha iniciado sesión.

get_userdata($userid)

Retorna la información de un usuario especificado de la base de datos.

wp_login($username, $password, $already_md5 = false)

Retorna verdadero si el nombre de usuario y contraseña corresponden con los registradps por el usuario.

auth_redirect()

Si un usuario no está conectado, será redirigido a la página de inicio de sesión de WordPress antes de que se les permita acceder al contenido de la página desde la que se llama a esta función . Al iniciar la sesión con éxito , el usuario es enviado de vuelta a la página en cuestión.

wp_redirect($location)

Redirige el navegador a la URI absoluta especificado por el parámetro $location.

wp_notify_postauthor($comment_id, $comment_type='')

Envia un mensajes de correo electrónico al autor cuado le hacen un comentario a uno de sus contenidos.

wp_notify_moderator($comment_id)

Informa a la cuenta de correo electrónico administrativo que los comentario especificado deben ser moderados.

Ejemplo
Un ejemplo de lo que puede hacer con una pluggable functions activo es reemplazar el controlador de correo electrónico predeterminado. Para ello, lo que se necesita para escribir un plugin que define una función wp_mail(). Por defecto la función wp_mail() se ve como esto:

function wp_mail( $to, $subject, $message, $headers = '' ) {
  if( $headers == '' ) {
    $headers = "MIME-Version: 1.0\n" .
      "From: " . get_settings('admin_email') . "\n" . 
      "Content-Type: text/plain; charset=\"" . get_settings('blog_charset') . "\"\n";
  }

  return @mail( $to, $subject, $message, $headers );
}
Pero por ejemplo, si desea copiar todo su correo a otra dirección, se puede utilizar este código en un plugin:

if( ! function_exists('wp_mail') ) {
  function wp_mail( $to, $subject, $message, $headers = '' ) {
    if( $headers == '' ) {
      $headers = "MIME-Version: 1.0\n" .
        "From: " . get_settings('admin_email') . "\n" . 
        "Cc: dummy@example.com\n" .
        "Content-Type: text/plain; charset=\"" . get_settings('blog_charset') . "\"\n";
    }

    return @mail($to, $subject, $message, $headers);
  }
}
Observe que si se conecta una función básica como esta el original ya no está disponible.

Funciones extensibles (by-pass)
El by-passing es una práctica que permite crear una vía alternativa para el proceso interno de una función. A diferencia de las funciones extensibles, no se reemplaza una función por otra, sino que se ingresa a la función original, se ejecuta un proceso diferente, y se detiene la ejecución del resto del código. En WordPress podemos lograrlo por medio del uso de filtros.

// Función original:
function my_original_function() {
  if ( apply_filters( 'my_original_function_hook', false ) ) {
    return; // Se detiene la ejecución de la función en caso de que el filtro resuelva "true".
  }

  echo 'Hola mundo!';
}

// Función de by-pass:
function my_by_pass_function() {
  echo 'Chau mundo!';

  return true; // Devolvemos "true". Esto es importante para que la ejecución de la función original se detenga.
}

// Seteamos el filtro de by pass:
add_filter( 'my_original_function_hook', 'my_by_pass_function' );

// Llamamos a la función original:
my_original_function(); // Se imprime 'Chau mundo!'
